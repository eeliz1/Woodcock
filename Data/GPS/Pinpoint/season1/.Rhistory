sd_Bare_ground=sd(Bare_ground),
mean_Other=mean(Other),
sd_Other=sd(Other),
mean_Density=mean(Density_percentage),
sd_Density=sd(Density_percentage)
)
sumarize_samplepos
summarize_dateut=ddply(x, .(SamplePos), summarise,
mean_BasalArea=mean(Basal_Area),
sd_Basal_Area=sd(Basal_Area),
mean_canopy_percentage=mean(canopy_percentage),
sd_canopy_percentage=sd(canopy_percentage),
mean_Litter=mean(Litter),
sd_Litter=sd(Litter),
mean_Herbac=mean(Herbac),
sd_Herbac=sd(Herbac),
mean_Shrub=mean(Shrub),
sd_Shrub=sd(Shrub),
mean_Tree=mean(Tree),
sd_Tree=sd(Tree),
mean_Bare_ground=mean(Bare_ground),
sd_Bare_ground=sd(Bare_ground),
mean_Other=mean(Other),
sd_Other=sd(Other),
mean_Density=mean(Density_percentage),
sd_Density=sd(Density_percentage)
)
summarize_dateut
summarize_dateut
summarize_dateut=ddply(x, .(Date_utilized), summarise,
mean_BasalArea=mean(Basal_Area),
sd_Basal_Area=sd(Basal_Area),
mean_canopy_percentage=mean(canopy_percentage),
sd_canopy_percentage=sd(canopy_percentage),
mean_Litter=mean(Litter),
sd_Litter=sd(Litter),
mean_Herbac=mean(Herbac),
sd_Herbac=sd(Herbac),
mean_Shrub=mean(Shrub),
sd_Shrub=sd(Shrub),
mean_Tree=mean(Tree),
sd_Tree=sd(Tree),
mean_Bare_ground=mean(Bare_ground),
sd_Bare_ground=sd(Bare_ground),
mean_Other=mean(Other),
sd_Other=sd(Other),
mean_Density=mean(Density_percentage),
sd_Density=sd(Density_percentage)
)
summarize_dateut
summarize_Bandnmbr=ddply(x, .(Bandnmbr), summarise,
mean_BasalArea=mean(Basal_Area),
sd_Basal_Area=sd(Basal_Area),
mean_canopy_percentage=mean(canopy_percentage),
sd_canopy_percentage=sd(canopy_percentage),
mean_Litter=mean(Litter),
sd_Litter=sd(Litter),
mean_Herbac=mean(Herbac),
sd_Herbac=sd(Herbac),
mean_Shrub=mean(Shrub),
sd_Shrub=sd(Shrub),
mean_Tree=mean(Tree),
sd_Tree=sd(Tree),
mean_Bare_ground=mean(Bare_ground),
sd_Bare_ground=sd(Bare_ground),
mean_Other=mean(Other),
sd_Other=sd(Other),
mean_Density=mean(Density_percentage),
sd_Density=sd(Density_percentage)
)
summarize_BandNmbr=ddply(x, .(BandNmbr), summarise,
mean_BasalArea=mean(Basal_Area),
sd_Basal_Area=sd(Basal_Area),
mean_canopy_percentage=mean(canopy_percentage),
sd_canopy_percentage=sd(canopy_percentage),
mean_Litter=mean(Litter),
sd_Litter=sd(Litter),
mean_Herbac=mean(Herbac),
sd_Herbac=sd(Herbac),
mean_Shrub=mean(Shrub),
sd_Shrub=sd(Shrub),
mean_Tree=mean(Tree),
sd_Tree=sd(Tree),
mean_Bare_ground=mean(Bare_ground),
sd_Bare_ground=sd(Bare_ground),
mean_Other=mean(Other),
sd_Other=sd(Other),
mean_Density=mean(Density_percentage),
sd_Density=sd(Density_percentage)
)
summarize_Bandnmbr
summarize_BandNmbr
library(xlsx)
summarize_samplepos=ddply(x, .(SamplePos), summarise,
mean_BasalArea=mean(Basal_Area),
sd_Basal_Area=sd(Basal_Area),
mean_canopy_percentage=mean(canopy_percentage),
sd_canopy_percentage=sd(canopy_percentage),
mean_Litter=mean(Litter),
sd_Litter=sd(Litter),
mean_Herbac=mean(Herbac),
sd_Herbac=sd(Herbac),
mean_Shrub=mean(Shrub),
sd_Shrub=sd(Shrub),
mean_Tree=mean(Tree),
sd_Tree=sd(Tree),
mean_Bare_ground=mean(Bare_ground),
sd_Bare_ground=sd(Bare_ground),
mean_Other=mean(Other),
sd_Other=sd(Other),
mean_Density=mean(Density_percentage),
sd_Density=sd(Density_percentage)
)
write.table(summarize_samplepos, "C:/Users/Elisa/Documents/Woodcock/R_Woodcock/table_export.csv", sep=",")
write.table(summarize_samplepos, "C:/Users/Elisa/Documents/Woodcock/R_Woodcock/table_export.csv",
append = FALSE, sep=",")
write.table(summarize_dateut, "C:/Users/Elisa/Documents/Woodcock/R_Woodcock/table_export.csv",
append = FALSE, sep=",")
write.table(summarize_samplepos, "C:/Users/Elisa/Documents/Woodcock/R_Woodcock/table_export.csv",
append = FALSE, sep=",")
write.csv(summarize_samplepos, "C:/Users/Elisa/Documents/Woodcock/R_Woodcock/table_export.csv",
append = FALSE, sep=",")
write.csv(summarize_dateut, "C:/Users/Elisa/Documents/Woodcock/R_Woodcock/table_export.csv",
append = FALSE, sep=",")
write.csv(summarize_samplepos, "C:/Users/Elisa/Documents/Woodcock/R_Woodcock/samplepos_export.csv",
append = FALSE, sep=",")
write.csv(summarize_dateut, "C:/Users/Elisa/Documents/Woodcock/R_Woodcock/dateut_export.csv",
append = FALSE, sep=",")
write.csv(summarize_BandNmbr, "C:/Users/Elisa/Documents/Woodcock/R_Woodcock/BandNmbr_export.csv",
append = FALSE, sep=",")
write.csv(summarize_samplepos, "R:/Lisa/R/samplepos_export.csv",
append = FALSE)
write.csv(summarize_dateut, "R:/Lisa/R/dateut_export.csv",
append = FALSE, sep=",")
write.csv(summarize_BandNmbr, "R:/Lisa/R/BandNmbr_export.csv",
append = FALSE, sep=",")
?rgdal
df=read.csv("R:/CollierLab/Lisa/Woodcock/Data/GPS/DERI_F_171368602_44023_149.600/PinPoint 44023 2016-02-03 08-54-50.csv", header=TRUE, skip=4)
str(df)
head(df)
df$gmt=strptime(paste(df$GMT.Time),"%m/%d/%Y %H:%M")
df$dt=df$gmt-(60*60*6)
df=df[order(df$dt),]
df=df[!is.na(df$Latitude) | !is.na(df$Longitude),]
xy=df[,c(3,2)]
spdf=SpatialPointsDataFrame(xy, df, proj4string = CRS("+proj=longlat +datum=WGS84"))
spdf=SpatialPointsDataFrame(xy, df, proj4string = CRS("+proj=longlat +datum=WGS84"))
?SpatialPointsDataFrame()
df=read.csv("R:/CollierLab/Lisa/Woodcock/Data/GPS/DERI_F_171368602_44023_149.600/PinPoint 44023 2016-02-03 08-54-50.csv", header=TRUE, skip=4)
df=read.csv("R:/Lisa/Woodcock/Data/GPS/DERI_F_171368602_44023_149.600/PinPoint 44023 2016-02-03 08-54-50.csv", header=TRUE, skip=4)
head(df)
df$gmt=strptime(paste(df$GMT.Time),"%m/%d/%Y %H:%M")
df$dt=df$gmt-(60*60*6)
df=df[order(df$dt),]
df=df[!is.na(df$Latitude) | !is.na(df$Longitude),]
xy=df[,c(3,2)]
spdf=SpatialPointsDataFrame(xy, df, proj4string = CRS("+proj=longlat +datum=WGS84"))
plot(spdf)
spdf1=spdf[-nrow(spdf),]
spdf2=spdf[-1,]
df=df[-nrow(df),]
df$spdfdist=distVincentyEllipsoid(spdf1, spdf2)
head(df)
df=df[df$spdf<=5000,]
plot(df$dt, df$spdfdist, type="l")
df=df[df$spdf<=5000,]
plot(df$dt, df$spdfdist, type="l")
summary(df$spdfdist)
df=df[!is.na(df$Latitude) | !is.na(df$Longitude),]
xy=df[,c(3,2)]
spdf=SpatialPointsDataFrame(xy, df, proj4string = CRS("+proj=longlat +datum=WGS84"))
##?SpatialPointsDataFrame()
plot(spdf)
spdf1=spdf[-nrow(spdf),]
spdf2=spdf[-1,]
df=df[-nrow(df),]
df$spdfdist=distVincentyEllipsoid(spdf1, spdf2)
head(df)
df=df[df$spdf<=5000,]
plot(df$dt, df$spdfdist, type="l")
df=df[!is.na(df$Latitude) | !is.na(df$Longitude),]
xy=df[,c(3,2)]
spdf=SpatialPointsDataFrame(xy, df, proj4string = CRS("+proj=longlat +datum=WGS84"))
##?SpatialPointsDataFrame()
plot(spdf)
spdf1=spdf[-nrow(spdf),]
spdf2=spdf[-1,]
df=df[-nrow(df),]
?distVincentyEllipsoid()
library(geosphere)
library(rgdal)
library(sp)
library(maptools)
library(geosphere)
library(PBSmapping)
library(ggplot2)
library(plyr)
library(scales)
library(gridExtra)
library(mgcv)
library.path <- cat(.libPaths())
library("geosphere", lib.loc = library.path)
library.path <- cat(.libPaths())
library("geosphere", lib.loc = library.path)
library(geosphere)
library(geosphere)
library(geosphere)
library(geosphere)
# installing/loading the package:
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
# using the package:
updateR()
install.packages("adehabitatHR", dependencies=TRUE)
library(rgdal)
library(sp)
library(maptools)
library(geosphere)
library(PBSmapping)
library(ggplot2)
library(plyr)
library(scales)
library(gridExtra)
library(mgcv)
install.packages("ggplot2", dependencies=TRUE)
install.packages("plyr", dependencies=TRUE)
install.packages("gridExtra", dependencies=TRUE)
install.packages("mgcv", dependencies=TRUE)
install.packages("mgcv", dependencies = TRUE)
library(rgdal)
library(sp)
library(maptools)
library(geosphere)
library(PBSmapping)
library(ggplot2)
library(plyr)
library(scales)
library(gridExtra)
library(mgcv)
df=read.csv("R:/Lisa/Woodcock/Data/GPS/DERI_F_171368602_44023_149.600/PinPoint 44023 2016-02-03 08-54-50.csv", header=TRUE, skip=4)
head(df)
df$gmt=strptime(paste(df$GMT.Time),"%m/%d/%Y %H:%M")
df$dt=df$gmt-(60*60*6)
df=df[order(df$dt),]
df=df[!is.na(df$Latitude) | !is.na(df$Longitude),]
xy=df[,c(3,2)]
spdf=SpatialPointsDataFrame(xy, df, proj4string = CRS("+proj=longlat +datum=WGS84"))
plot(spdf)
spdf1=spdf[-nrow(spdf),]
spdf2=spdf[-1,]
df=df[-nrow(df),]
df$spdfdist=distVincentyEllipsoid(spdf1, spdf2)
head(df)
df=df[df$spdf<=5000,]
plot(df$dt, df$spdfdist, type="l")
summary(df$spdfdist)
df=read.csv("R:/Lisa/Woodcock/Data/GPS/DERI_F_171368611_44009_149.180/Point 44009 2016-02-03 09-10-03.csv", header=TRUE, skip=4)
df=read.csv("R:/Lisa/Woodcock/Data/GPS/DERI_F_171368611_44009_149.180/PinPoint 44009 2016-02-03 09-10-03.csv", header=TRUE, skip=4)
head(df)
df$gmt=strptime(paste(df$GMT.Time),"%m/%d/%Y %H:%M")
df$dt=df$gmt-(60*60*6)
df=df[order(df$dt),]
df=df[!is.na(df$Latitude) | !is.na(df$Longitude),]
xy=df[,c(3,2)]
spdf=SpatialPointsDataFrame(xy, df, proj4string = CRS("+proj=longlat +datum=WGS84"))
plot(spdf)
spdf1=spdf[-nrow(spdf),]
spdf2=spdf[-1,]
df=df[-nrow(df),]
df$spdfdist=distVincentyEllipsoid(spdf1, spdf2)
head(df)
df=df[df$spdf<=5000,]
plot(df$dt, df$spdfdist, type="l")
df=read.csv("R:/Lisa/Woodcock/Data/GPS/DERI_M_171368600_44018_149.450/PinPoint 44018 2016-02-03 08-53-34.csv", header=TRUE, skip=4)
head(df)
df$gmt=strptime(paste(df$GMT.Time),"%m/%d/%Y %H:%M")
df$dt=df$gmt-(60*60*6)
df=df[order(df$dt),]
df=df[!is.na(df$Latitude) | !is.na(df$Longitude),]
xy=df[,c(3,2)]
spdf=SpatialPointsDataFrame(xy, df, proj4string = CRS("+proj=longlat +datum=WGS84"))
plot(spdf)
spdf1=spdf[-nrow(spdf),]
spdf2=spdf[-1,]
df=df[-nrow(df),]
df$spdfdist=distVincentyEllipsoid(spdf1, spdf2)
head(df)
df=df[df$spdf<=5000,]
plot(df$dt, df$spdfdist, type="l")
x=read.csv("C:/Users/Elisa/Documents/Woodcock/Data/GPS/DERI_F_171368602_44023_149.600/171368602_day3/171368602_day3.csv", header=TRUE)
coordinates(x)=c("Longitude", "Latitude")
proj4string(x)<-CRS('+proj=longlat +datum=WGS84')
my.mcp=mcp(x)
plot(my.mcp)
plot(x, add=TRUE)
install.packages("marmap")
library(marmap)
library(marmap)
data(lat.lon.meuse, package="loa", envir = environment())
install.packages("RgoogleMaps")
library(RgoogleMaps)
?rmap
?map()
?map()
?ggplot
??ggplot
??ggplot
??ggplot2
??autoplot
library(maps)
library(mapdata)
map("worldHires","Canada”, xlim=c(-141,-53), ylim=c(40,85), col="gray90”, fill=TRUE)
?map()
getwd()
?setwd()
x = 2
ls()
objects()
n = (5, 10, 15)
n = ("5, 10, 15")
n = c(5, 10, 15)
n[1]
n[3]
list.files()
x = list.files()
x[170:]
x[170]
x[170:172]
x[170:175]
z = 1:30
z
z = 1:30, 2
z = seq(2, 30)
z
z = seq(2, 30, 2)
z
seq_len(z)
z <- 4
z
z = seq(2, 30, 2)
z
seq_len(z)
df = matrix(1:9, nrow=3)
df
df[2,3]
df%%df
df = matrix(1:9, nrow=3)
df
df%*%df
while(i<=10){
print(i)
i=i+1
}
i = 1
while(i<=10){
print(i)
i=i+1
}
i
?list
i = 1
while(i<=10){
x = list(i)
i=i+1
}
x
i
i = 1
while(i<=10){
list(i)
i=i+1
}
i
for (i in 1:10){
print(i)
}
x=list()
for (i in 1:5){
x <-c(x, i)
}
x
?append()
x=list()
for (i in 1:5){
append(i)
}
for (i in 1:5){
append(x,i)
}
x
x=list()
for (i in 1:5){
append(x,i,)
}
x
for (i in 1:10){
if(if%%2 == 0){
print(paste(i, "is Even"))
}
else{
print(paste(i, "is Odd'"))
}
}
for (i in 1:10){
if(if%%2 == 0){
print(paste(i, "is Even"))
}else{
print(paste(i, "is Odd'"))
}
}
for (i in 1:10){
if(i%%2 == 0){
print(paste(i, "is Even"))
}else{
print(paste(i, "is Odd'"))
}
}
g = array()
g = array(dim=10)
for (i in 1:10){
g[i]=2*i
}
g
x=1:10
m=2
y=m*x
plot(x,y)
plot(x, y, typ='l')
plot(x,y, typ='p')
plot(x,y, typ='b')
w = array(dim=12)
for (N in 1:12){
w[i]=N*lam
}
lam=1.15
N=2
w = array(dim=12)
for (N in 1:12){
w[i]=N*lam
}
w
w = array(dim=12)
for (N in 1:12){
w[i]=2*N
}
w
lam=1.15
N=2
w = array(dim=12)
for (i in 1:12){
w[i]=N
}
w
w = array(dim=12)
for (i in 1:12){
w[i]=N*lam
}
w
w = array(dim=12)
for (i in 1:12){
w[i]=(N*lam)
N=N*lam
}
w
plot(w)
plot(w, xlab="Time", ylab="Pop. size")
setwd(C:\Elisa\Documents\Woodcock\R_Woodcock\Temp)
setwd("C:\Elisa\Documents\Woodcock\R_Woodcock\Temp")
setwd("C:Elisa\Documents\Woodcock\R_Woodcock\Temp")
setwd("C:Elisa/Documents/Woodcock/R_Woodcock/Temp")
setwd("C:Elisa/Documents/Woodcock/R_Woodcock/Temp")
setwd("C:Elisa/Documents/Woodcock/R_Woodcock/Temp")
setwd("C:Elisa/Documents")
---
title: "Movement graphs"
author: "Lisa"
date: "Wednesday, September 07, 2016"
output: html_document
---
Graphs of each bird's daily movements
```{r, echo=FALSE}
library(plyr)
library(xtable)
library(sp)
library(geosphere)
#md = read.csv("C:/Users/Elisa/Documents/Woodcock/Data/GPS/Pinpoint/PinPoint 44025 2016-02-03 09-05-57.csv",
#              header=TRUE, skip=4)
##get all .csv file names from folder into object "Filenames"
setwd("C:/Users/Elisa/Documents/Woodcock/Data/GPS/Pinpoint/season1")
move_files <- Sys.glob("*.csv")
#move_files
for (file in move_files){
md <- read.csv(file, header=TRUE, sep=,)
##create POSIX object
md$gmt=strptime(paste(md$GMT.Time),"%m/%d/%Y %H:%M")
md$dt=md$gmt-(60*60*6)
md=md[order(md$dt),]
##omit non-fixed
om <- with(md, (Latitude==0.00000))
md <-md[!om,]
##from Woodcock move
xy=md[,c(4,3)]
spdf=SpatialPointsDataFrame(xy, md, proj4string = CRS("+proj=longlat +datum=WGS84"))
#plot(spdf)
spdf1=spdf[-nrow(spdf),]
spdf2=spdf[-1,]
md=md[-nrow(md),]
md$spdfdist=distVincentyEllipsoid(spdf1, spdf2)
#head(md)
md=md[md$spdf<=5000,]
plot(md$dt, md$spdfdist, xlab="Time", ylab="Distance Moved (m)", type="l")
}
